{"version":3,"sources":["components/TodosSearchInputs/TodosSearchInputs.jsx","components/List/List.jsx","components/Types/Types.js","components/TodoList/TodoList.jsx","api/helper.js","api/user.js","components/CurrentUser/CurrentUser.jsx","App.jsx","api/todos.js","index.js"],"names":["TodosSearchInputs","inputValue","selectValue","handleChange","className","placeholder","name","value","onChange","e","List","PropTypes","bool","number","isRequired","string","this","props","selectedUserId","filtredTodos","getUserId","map","todo","key","id","completed","type","checked","readOnly","title","classNames","userId","onClick","React","Component","TodoList","state","event","target","setState","todos","filter","includes","length","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","getUser","CurrentUser","user","changeCurrentUser","prevProps","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7dd3e94.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodosSearchInputs = ({ inputValue, selectValue, handleChange }) => (\n  <div className=\"TodoList__inputs-container\">\n    <input\n      className=\"TodoList__input\"\n      placeholder=\"Search\"\n      name=\"inputValue\"\n      value={inputValue}\n      onChange={e => handleChange(e)}\n    />\n\n    <select\n      className=\"TodoList__input\"\n      value={selectValue}\n      name=\"selectValue\"\n      onChange={e => handleChange(e)}\n    >\n      <option>All</option>\n      <option>Active</option>\n      <option>Completed</option>\n    </select>\n  </div>\n)\n\nTodosSearchInputs.propTypes = {\n  inputValue: PropTypes.string || '',\n  selectValue: PropTypes.string || '',\n  handleChange: PropTypes.func.isRequired,\n}","import classNames from 'classnames';\nimport React from 'react';\nimport { TodoType } from '../Types';\nimport PropTypes from 'prop-types';\n\nexport class List extends React.Component {\n  render() {\n    const { selectedUserId, filtredTodos, getUserId } = this.props;\n\n    return (\n      <ul className=\"TodoList__list\">\n        {filtredTodos.map(todo => (\n          <li\n            key={todo.id}\n            className={todo.completed\n              ? 'TodoList__item TodoList__item--checked'\n              : 'TodoList__item TodoList__item--unchecked'\n            }\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classNames(\n                'TodoList__user-button',\n                'button',\n                { 'TodoList__user-button--selected': (\n                  selectedUserId !== todo.userId\n                ) },\n              )}\n              type=\"button\"\n              onClick={() => getUserId(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n}\n\nList.propTypes = {\n  getUserId: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired, \n  filtredTodos: PropTypes.arrayOf(\n    PropTypes.shape(TodoType)\n  ).isRequired\n}","import PropTypes from 'prop-types';\n\nexport const TodoType = {\n  completed: PropTypes.bool || false,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { TodosSearchInputs } from '../TodosSearchInputs';\nimport { List } from '../List'\nimport { TodoType } from '../Types';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputValue: '',\n    selectValue: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { todos, getUserId, selectedUserId } = this.props;\n    const { inputValue, selectValue } = this.state;\n    const filtredTodos = todos\n      .filter(todo => todo.title.includes(inputValue))\n      .filter((todo) => {\n        if (selectValue === 'Active') {\n          return !todo.completed;\n        }\n\n        if (selectValue === 'Completed') {\n          return todo.completed;\n        }\n\n        return todo;\n      });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>\n          Todos:\n          {filtredTodos.length}\n        </h2>\n\n        <TodosSearchInputs\n          inputValue={inputValue}\n          selectValue={selectValue}\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"TodoList__list-container\">\n          {filtredTodos.length\n            ? (\n              <List\n                filtredTodos={filtredTodos}\n                getUserId={getUserId}\n                selectedUserId={selectedUserId}\n              />\n            ) : (\n              <h3>No todos</h3>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(TodoType).isRequired,\n  ).isRequired,\n  getUserId: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n","import { request } from './helper';\n\nexport const getUser = id => request(`/users/${id}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/user';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.changeCurrentUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.changeCurrentUser();\n    }\n  }\n\n  changeCurrentUser = () => (\n    getUser(this.props.userId)\n      .then(user => (\n        this.setState({ user })\n      ))\n  )\n\n  render() {\n    const { getUserId } = this.props;\n\n    if (!this.state.user) {\n      return (\n        <h3>\n          Loading...\n        </h3>\n      )\n    }\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {this.state.user.id}\n            </span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{this.state.user.name}</h3>\n          <p className=\"CurrentUser__email\">{this.state.user.email}</p>\n          <p className=\"CurrentUser__phone\">{this.state.user.phone}</p>\n\n          <button\n            type=\"button\"\n            className=\"CurrentUser__button button\"\n            onClick={() => getUserId(0)}\n          >\n            Clear\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  getUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/todos';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => (\n        this.setState({\n          todos: todos.filter(todo => todo.title && todo.userId),\n        })\n      ));\n  }\n\n  getUserId = userId => (\n    this.setState({\n      selectedUserId: userId,\n    })\n  )\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <TodoList\n              todos={todos}\n              getUserId={this.getUserId}\n              selectedUserId={selectedUserId}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                getUserId={this.getUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { request } from './helper';\n\nexport const getTodos = () => request('/todos');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}